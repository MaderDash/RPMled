#include "BluetoothSerial.h"
#include "ELMduino.h"
#include "SerialTransfer.h"
BluetoothSerial SerialBT;
#define ELM_PORT   SerialBT
#define DEBUG_PORT Serial
int rled = 9; 
int gled = 10;           
int bled = 11;          
int brightness = 0;
ELM327 myELM327;


uint32_t rpm = 0;


void setup()
{

#if LED_BUILTIN
  pinMode(LED_BUILTIN, OUTPUT);
  digitalWrite(LED_BUILTIN, LOW);
#endif

  DEBUG_PORT.begin(115200);
  //SerialBT.setPin("1234");
  ELM_PORT.begin("ArduHUD", true);

  if (!ELM_PORT.connect("Android-Vlink")) {
    DEBUG_PORT.println("Couldn't connect to OBD scanner - Phase 1");
    while (1);
  }

  if (!myELM327.begin(ELM_PORT, true, 2000))
  {
    Serial.println("Couldn't connect to OBD scanner - Phase 2");
    while (1);
  }

  Serial.println("Connected to ELM327");
  pinMode(rled, OUTPUT);
  pinMode(gled, OUTPUT);
  pinMode(bled, OUTPUT);
}

int elmData() {
  float tempRPM = myELM327.rpm();

  if (myELM327.nb_rx_state == ELM_SUCCESS) {
    rpm = (uint32_t)tempRPM;
    Serial.print("RPM: "); Serial.println(rpm);
  }
  else if (myELM327.nb_rx_state != ELM_GETTING_MSG)
    myELM327.printError();
  return (rpm);
}

void loop() {
  int brightness = map(elmData(), 0, 5000, 0, 255);
  analogWrite(rled, brightness);
  analogWrite(gled, brightness);
  analogWrite(bled, brightness);
  delay(2);
}
